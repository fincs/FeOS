/*! \page directmode Direct mode applications

FeOS applications by default do not own the hardware, leaving its management to another
application running on the system (or the kernel, if no such application is running).
Using the \ref coopguidev "cooperative GUI system" allows an application to display
arbitrary graphics while sharing access rights; however several kinds of applications
such as games or demos require owning exclusive rights to the hardware and high
performance.

This document details how to build an application that requests hardware ownership
(Direct mode application). The skeleton of such applications look like this:

\code
#include <feos.h>

// This function is analogous to old-style libnds applications' main() function
static int hwMain(void* userData)
{
	// Video initialization...
	
	// Main loop...
	for (;;)
	{
		// VBlank sync
		swiWaitForVBlank();
		scanKeys(); // Key input reading
		
		// Graphics updating...
		
		// Game/application logic...
	}

	// Video deinitialization...
	return 0;
}

int main()
{
	// Request hardware ownership
	return DSRequestHardware(hwMain, NULL, NULL);
}
\endcode

Apart from the different header file and the need to manage hardware ownership,
this is mostly identical to old-style libnds application development. Make sure
you provide a way to exit the application (and thus break from the main loop) or
else the user will be forced to reset the DS.

Game assets such as graphics are best loaded from \ref far.h "an embedded filesystem".
However it is also possible to statically link in `.bin` files through putting them
in the project `data` folder, in a similar fashion to libnds applications.

*/